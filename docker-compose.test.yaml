version: '3'
services:

  midi_meta_db:
    container_name: midi_meta_db
    image: postgres:16.2
    environment:
      PGUSER: pguser
      POSTGRES_USER: midiuser
      POSTGRES_PASSWORD: midipass
      POSTGRES_DB: midi_meta_db
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "midi_meta_db", "-U", "pguser" ]
      interval: 30s
      timeout: 10s
      retries: 5
    network_mode: bridge

  midi_blob_db:
    container_name: midi_blob_db
    image: postgres:16.2
    environment:
      PGUSER: pguser
      POSTGRES_USER: blobuser
      POSTGRES_PASSWORD: blobpass
      POSTGRES_DB: midi_blob_db
    ports:
      - "5433:5432"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "midi_blob_db", "-U", "pguser" ]
      interval: 30s
      timeout: 10s
      retries: 5
    network_mode: bridge

  midi_user_db:
    container_name: midi_user_db
    image: postgres:16.2
    environment:
      PGUSER: pguser
      POSTGRES_USER: dbuser
      POSTGRES_PASSWORD: dbpass
      POSTGRES_DB: midi_user_db
    ports:
      - "5434:5432"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "midi_user_db", "-U", "pguser" ]
      interval: 30s
      timeout: 10s
      retries: 5
    network_mode: bridge

  user-service:
    container_name: user-service
    build:
      dockerfile: Dockerfile
      context: ./user-service
    image: ex-user-service
    ports:
      - "8081:8081"
    environment:
      USER_DB_NAME: "midi_user_db"
      USER_DB_URL: "midi_user_db"
    depends_on:
      midi_user_db:
        condition: service_healthy
    network_mode: bridge

  midi-manager:
    container_name: midi-manager
    build:
      dockerfile: Dockerfile
      context: ./midi-manager
    image: ex-midi-manager
    ports:
      - "8082:8082"
    environment:
      META_DB_NAME: "midi_meta_db"
      META_DB_URL: "midi_meta_db"
      BLOB_DB_NAME: "midi_blob_db"
      BLOB_DB_URL: "midi_blob_db"
    depends_on:
      midi_blob_db:
        condition: service_healthy
      midi_meta_db:
        condition: service_healthy
    network_mode: bridge
    networks:
      - bridge

  react-app:
    container_name: react-app
    build:
      dockerfile: Dockerfile
      args:
        - MIDI_ADDRESS=localhost:8082
        - USER_ADDRESS=localhost:8081
    image: ex-react-app:test
    ports:
      - "3000:3000"